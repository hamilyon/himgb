Контекстноек определение рекламы
в
html 
документе

html:


<head>
    <title>
<body>
    <p>
        <div>
    <table>
        <tbody>
            <tr>
                <td>
                    <a href="/.html">
                <td>
                <td>
            <tr>
                <td>


    <tr>
        <td>
            <table>
            <tr>
                <td>
                    !рекламный текст! КуПиТе У НаС ПыЛе
                        <a href="adadad.ru/bla?foo=bar12321453245141234">сОс !!111стоадиннадцать


после нашей фильтрации:

<head>
    <title>
<body>
    <p>
        <div>
    <table>
        <tbody>
            <tr>
                <td>
                    <a href="/.html">
                <td>
                <td>
            <tr>
                <td>


    <tr>
        <td class="2989474817198741">
            

т.е. 
1) реклама все равно грузится
2) DOM дерево редактируется
3) ...
4) пользователь не видит рекламы

разделители:

td
div
article
a





DOM -> 
находим фактически действующие стили

дерево проходится 

стеммер: ([а-z_] получам короткие сообщения
имя тэга, стили, аттрибуты, ссылки (здесь есть варианты), слова, alt тексты - все в одной куче, 
возможно с префиксами, чтобы происхождение установить
отдельно идет по одному слову, относящемуся к картинкам 
все приведены к lowercase
html коментарии - даже не разделители, как ПГ завещал)

априорные вероятности равные (спама в инете больше, но это не важно)

функция спам (соощение -> [0..1])

функция толерантность [0..1] -> True|False
толерантность x = if x > 0.9 then True else False

функция спам - натренированный на 
    словарь Ожегова + ленту яндекс-новостей как на хэм
    10 минут вручную собраной хромом рекламы (дурной!) как на спам



части, собираемые за 10-40 минут  (50-70 штук)

0) функция спам (10 *)

1) основная часть (кроме функции спам)
данные (сигнатуры, прототип) + 
чтение с диска словарей для тренировки (сигнатуры, прототип) +
DOM -> дерево (сигнатуры, прототип (5 *))
дерево -> строка (сигнатуры +, прототип) 
токенайзер (сигнатуры +, прототип+)
стеммер (сигнатуры +, прототип)
толерантность (прототип +)
обвязка :: дерево, стеммер, баесов фильтр -> действие вырезать/оставить (прототип +)

прити принтер действие вырезать/оставить -> строка (сигнатуры, прототип)

2) юнит-тесты
читает с диска (тест)
DOM -> дерево отбрасывает лишнее (тест)
дерево -> строка отбрасывает лишнее (тест)
дерево -> строка сохраняет контекст (через$) (2 * тест)

стеммер стеммит (тест)
стеммер сохраняет контекст ($) (тест)

функция спам работает (тест)
функция спам различает контекст (тест)


3) тесты интеграционные (тоже юнит, но интересные)
подготовка данных (3 примера, 80, 10, 10)
(найти доп данные (6*10 минут, привести к одному виду, разделить)
файл -> DOM (сигнатуры, тест)
тест на разный стемминг (сигнатуры, тест)

тест на реальную веб-страницу (html -> html) (сигнатуры, прототип)

39 раз по 10-40 минут (считаем, что 40)
 = 20 рабочих дней (утром и вечером )

диаграмма д.1
1 (0/39)
1 (2/39)
1 (4/41)
1 (5/41)
1 (7/41)
2 (9/47)
3 (10/47)
4 (still stuck on this)







































